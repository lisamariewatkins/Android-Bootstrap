apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.watkins.lisa"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // TODO: Uncomment me for schema
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        pickFirst 'META-INF/atomicfu.kotlin_module'
    }
}

apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':data')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    // Dagger Android Injector
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    // Android X
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.core:core-ktx:$ktx"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment:$nav" // For Kotlin use navigation-fragment-ktx
    implementation "androidx.navigation:navigation-ui:$nav" // For Kotlin use navigation-ui-ktx

    // Work Manager + Coroutines
    implementation "androidx.work:work-runtime-ktx:$work_manager"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle"
    testImplementation "androidx.arch.core:core-testing:$lifecycle"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    // retrofit logging
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging"

    // Moshi
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    // retrofit coroutines adapter
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_adapter"

    // Recycler View
    implementation "com.android.support:recyclerview-v7:$recycler_view"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"
    testImplementation "androidx.room:room-testing:$room"

    // Paging Library
    implementation "android.arch.paging:runtime:$paging"

    // Instrumentation Tests
    androidTestImplementation "androidx.test:runner:$x_test_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"

    // Mockk
    testImplementation "io.mockk:mockk:$mockk"

    // jUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1$junit"
}
